/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class spice_testutils_JNITestutils */

#ifndef _Included_spice_testutils_JNITestutils
#define _Included_spice_testutils_JNITestutils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chckad
 * Signature: (Ljava/lang/String;[DLjava/lang/String;[DD)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chckad
  (JNIEnv *, jclass, jstring, jdoubleArray, jstring, jdoubleArray, jdouble);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chckai
 * Signature: (Ljava/lang/String;[ILjava/lang/String;[I)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chckai
  (JNIEnv *, jclass, jstring, jintArray, jstring, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chcksc
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chcksc
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chcksd
 * Signature: (Ljava/lang/String;DLjava/lang/String;DD)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chcksd
  (JNIEnv *, jclass, jstring, jdouble, jstring, jdouble, jdouble);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chcksi
 * Signature: (Ljava/lang/String;ILjava/lang/String;II)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chcksi
  (JNIEnv *, jclass, jstring, jint, jstring, jint, jint);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chcksl
 * Signature: (Ljava/lang/String;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chcksl
  (JNIEnv *, jclass, jstring, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    chckxc
 * Signature: (ZLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_chckxc
  (JNIEnv *, jclass, jboolean, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    illum
 * Signature: (Ljava/lang/String;DLjava/lang/String;Ljava/lang/String;[D[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_illum
  (JNIEnv *, jclass, jstring, jdouble, jstring, jstring, jdoubleArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    natdsk
 * Signature: (Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_natdsk
  (JNIEnv *, jclass, jstring, jstring, jint, jint, jstring, jint, jint);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    natik
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_natik
  (JNIEnv *, jclass, jstring, jstring, jstring, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    natpck
 * Signature: (Ljava/lang/String;ZZ)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_natpck
  (JNIEnv *, jclass, jstring, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    natspk
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_spice_testutils_JNITestutils_natspk
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    subpt
 * Signature: (Ljava/lang/String;Ljava/lang/String;DLjava/lang/String;Ljava/lang/String;[D[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_subpt
  (JNIEnv *, jclass, jstring, jstring, jdouble, jstring, jstring, jdoubleArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    subsol
 * Signature: (Ljava/lang/String;Ljava/lang/String;DLjava/lang/String;Ljava/lang/String;[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_subsol
  (JNIEnv *, jclass, jstring, jstring, jdouble, jstring, jstring, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_cg
 * Signature: (IILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1cg
  (JNIEnv *, jclass, jint, jint, jstring, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_elds2z
 * Signature: (IILjava/lang/String;IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1elds2z
  (JNIEnv *, jclass, jint, jint, jstring, jint, jint, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_secds2
 * Signature: (IILjava/lang/String;DDI[D[[DDDDIIZZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1secds2
  (JNIEnv *, jclass, jint, jint, jstring, jdouble, jdouble, jint, jdoubleArray, jobjectArray, jdouble, jdouble, jdouble, jint, jint, jboolean, jboolean, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_smldsk
 * Signature: (IILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1smldsk
  (JNIEnv *, jclass, jint, jint, jstring, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_torus
 * Signature: (IILjava/lang/String;IIDD[D[DLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1torus
  (JNIEnv *, jclass, jint, jint, jstring, jint, jint, jdouble, jdouble, jdoubleArray, jdoubleArray, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_wrtplt
 * Signature: (IILjava/lang/String;DDI[D[[DII[D[IZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1wrtplt
  (JNIEnv *, jclass, jint, jint, jstring, jdouble, jdouble, jint, jdoubleArray, jobjectArray, jint, jint, jdoubleArray, jintArray, jboolean, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    t_wrtplz
 * Signature: (IILjava/lang/String;II[D[ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_t_1wrtplz
  (JNIEnv *, jclass, jint, jint, jstring, jint, jint, jdoubleArray, jintArray, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tcase
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tcase
  (JNIEnv *, jclass, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tclose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tclose
  (JNIEnv *, jclass);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    topen
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_topen
  (JNIEnv *, jclass, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tsetup
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tsetup
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tstatd
 * Signature: (D[[D[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tstatd
  (JNIEnv *, jclass, jdouble, jobjectArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tstck3
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZZZ)I
 */
JNIEXPORT jint JNICALL Java_spice_testutils_JNITestutils_tstck3
  (JNIEnv *, jclass, jstring, jstring, jboolean, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tstlsk
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tstlsk
  (JNIEnv *, jclass);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tstpck
 * Signature: (Ljava/lang/String;ZZ)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tstpck
  (JNIEnv *, jclass, jstring, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tstspk
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_spice_testutils_JNITestutils_tstspk
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tsttxt
 * Signature: (Ljava/lang/String;[Ljava/lang/String;ZZ)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_tsttxt
  (JNIEnv *, jclass, jstring, jobjectArray, jboolean, jboolean);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    tsuccess
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_spice_testutils_JNITestutils_tsuccess
  (JNIEnv *, jclass);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzellplt
 * Signature: (DDDII[I[D[I[I)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzellplt
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jint, jint, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsball
 * Signature: (DII[I[D[I[I)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsball
  (JNIEnv *, jclass, jdouble, jint, jint, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsbox
 * Signature: (DDD[I[D[I[I)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsbox
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpspoly
 * Signature: (I[D[I[D[I[I)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpspoly
  (JNIEnv *, jclass, jint, jdoubleArray, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsscal
 * Signature: (D[D[I[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsscal
  (JNIEnv *, jclass, jdouble, jdoubleArray, jintArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsun
 * Signature: ([D[I[D[I[I[D[I[I)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsun
  (JNIEnv *, jclass, jdoubleArray, jintArray, jdoubleArray, jintArray, jintArray, jdoubleArray, jintArray, jintArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsxfrm
 * Signature: ([D[[D[I[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsxfrm
  (JNIEnv *, jclass, jdoubleArray, jobjectArray, jintArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zzpsxlat
 * Signature: ([D[D[I[D)V
 */
JNIEXPORT void JNICALL Java_spice_testutils_JNITestutils_zzpsxlat
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jintArray, jdoubleArray);

/*
 * Class:     spice_testutils_JNITestutils
 * Method:    zztboddsk
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_spice_testutils_JNITestutils_zztboddsk
  (JNIEnv *, jclass, jstring, jstring, jstring, jboolean);

#ifdef __cplusplus
}
#endif
#endif
